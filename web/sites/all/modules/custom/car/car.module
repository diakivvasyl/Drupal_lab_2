<?php

/**
 * Implements hook_entity_info().
 */
function cars_entity_info() {
  return [
    'car' => [
      'label' => t('Car'),
      'base table' => 'cars',
      'entity keys' => [
        'cid' => 'cid',
        'label' => 'model',
      ],
      'module' => 'car',
    ],
  ];
}

/**
 * Implements hook_menu().
 */
function car_menu() {
  $items = [];
  $items['cars'] = [
    'title' => 'All cars with all parameters',
    'page callback' => 'builds_car',
    'access callback' => TRUE,
  ];
  $items['cars/form'] = [
    'title' => 'Generate | Delete 5 cars',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['car_form'],
    'access callback' => TRUE,
  ];
  return $items;
}

/**
 * @return string
 * @throws Exception
 */
function builds_car() {
  $table_rows = [];
  // Table for cars.
  $table_cars_header = [
    'model' => ['data' => t('Model'), 'field' => 'model'],
    'year' => ['data' => t('Year'), 'field' => 'year'],
    'mileage' => ['data' => t('Mileage'), 'field' => 'mileage'],
    'price' => ['data' => t('Price'), 'field' => 'price'],
  ];

  $query = db_select('cars', 'c')->extend('TableSort');
  $query->fields('c', ['model', 'year', 'mileage', 'price'])
    ->orderByHeader($table_cars_header);
  $cars = $query->execute();
  foreach ($cars as $car) {
    $table_rows[] = [
      $car->model,
      $car->year,
      $car->mileage,
      $car->price,
    ];
  }

  if (!empty($table_rows)) {
    $output = theme('table', [
      'header' => $table_cars_header,
      'rows' => $table_rows,
    ]);
  }
  else {
    $output = "Sorry, not found data.";
  }
  return $output;
}

/**
 * @param $form
 * @param $form_state
 * @return mixed
 * Form for generating and deleting 5 cars.
 */
function car_form($form, &$form_state) {
  $form['markup']['#markup'] = format_string('<h2>@markup</h2>',
    [
      '@markup' => t("Sir, please press button 'generating 5 cars' to add 5 cars in the database or please press button
      'deleting 5 cars' to remove 5 cars from the database."),
    ]);
  // Button for generating 5 cars to database.
  $form['generate'] = [
    '#type' => 'submit',
    '#value' => t('generating 5 cars'),
    '#submit' => ['cars_form_generate_submit'],
  ];
  // Button for deleting 5 cars from database.
  $form['delete'] = [
    '#type' => 'submit',
    '#value' => t('deleting 5 cars'),
    '#submit' => ['cars_form_delete_submit'],
  ];
  return $form;
}

/**
 * @param $form
 * @param $form_state
 * @throws Exception
 * Generating 5 cars.
 */
function cars_form_generate_submit($form, &$form_state) {
  $count = db_select('cars', 'c')
    ->fields('c', ['cid'])
    ->execute();
  $rowCount = $count->rowCount();

  if ($rowCount >= 10) {
    drupal_set_message(t('Sir, you cannot be generating more than 10 cars to the database.'), 'error', TRUE);
  }
  else {
    $cars = [
      [
        'model' => 'Bentley Continental',
        'year' => 2017,
        'mileage' => 190000,
        'price' => 230000,
      ],
      [
        'model' => 'Porsche Panamera',
        'year' => 2018,
        'mileage' => 96000,
        'price' => 260000,
      ],
      [
        'model' => 'Maserati Levante',
        'year' => 2018,
        'mileage' => 60000,
        'price' => 110000,
      ],
      [
        'model' => 'Toyota Sequoia',
        'year' => 2018,
        'mileage' => 100000,
        'price' => 105000,
      ],
      [
        'model' => 'Cadillac Escalade ',
        'year' => 2018,
        'mileage' => 140000,
        'price' => 150000,
      ],
    ];

    // Generating 5 cars to a database.
    $query = db_insert('cars')->fields([
      'model',
      'year',
      'mileage',
      'price',
    ]);
    foreach ($cars as $car) {
      $query->values($car);
    }
    $query->execute();
    drupal_set_message(t('Congratulations! 5 cars generated successfully!!!'), 'status', TRUE);
  }
}

/**
 * @param $form
 * @param $form_state
 * For delete 5 cars  from database.
 */
function cars_form_delete_submit($form, &$form_state) {
  $empty_db = db_delete('cars')->execute();
  if ($empty_db) {
    drupal_set_message(t('Congratulations! 5 cars deleted successfully!!!'), 'status', TRUE);
  }
  else {
    drupal_set_message(t('Cars base is empty, nothing to delete.'), 'error', TRUE);
  }
}
